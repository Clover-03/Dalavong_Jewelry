const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function main() {
  console.log('๐ฑ เนเธฃเธดเนเธกเธเนเธเนเธชเนเธเนเธญเธกเธนเธฅเธเธฑเธงเธญเธขเนเธฒเธ...');

  try {
    // เธฅเนเธฒเธเธเนเธญเธกเธนเธฅเนเธเนเธฒเธเนเธญเธ (เธเนเธฒเธกเธต)
    console.log('๐งน เธฅเนเธฒเธเธเนเธญเธกเธนเธฅเนเธเนเธฒ...');
    await prisma.tb_Sell.deleteMany();
    await prisma.tb_Exchange.deleteMany();
    await prisma.tb_Repurchase.deleteMany();
    await prisma.tb_Product.deleteMany();
    await prisma.tb_Customer.deleteMany();
    await prisma.tb_Supplier.deleteMany();
    await prisma.tb_Price.deleteMany();

    // เธฃเธตเนเธเนเธ Auto Increment เนเธเนเธ 1
    console.log('๐ เธฃเธตเนเธเนเธ Auto Increment...');
    await prisma.$executeRaw`ALTER TABLE Tb_Price AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Customer AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Supplier AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Product AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Sell AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Exchange AUTO_INCREMENT = 1`;
    await prisma.$executeRaw`ALTER TABLE Tb_Repurchase AUTO_INCREMENT = 1`;

    // 1. เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธฃเธฒเธเธฒเธเธญเธ
    console.log('๐ฐ เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธฃเธฒเธเธฒเธเธญเธ...');
    const goldPrice = await prisma.tb_Price.create({
      data: {
        Date: new Date(),
        Buy_price: 2850000,  // 2,850,000 LAK เธเนเธญเธเธฒเธ
        Sell_price: 2900000  // 2,900,000 LAK เธเนเธญเธเธฒเธ
      }
    });

    // 2. เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธฅเธนเธเธเนเธฒ (15 เธฃเธฒเธขเธเธฒเธฃ)
    console.log('๐ฅ เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธฅเธนเธเธเนเธฒ...');
    const customers = [
      { name: 'เบเบฒเบ เบชเบปเบกเบเบดเบ เบงเบปเบเบเบฒเบง', phone: '020-55559999', address: 'เบเปเบฒเบ เปเบญเบเบเบงเบ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบเบธเบเบกเบต เปเบชเบเบชเบธเบงเบฑเบ', phone: '020-77778888', address: 'เบเปเบฒเบ เบเปเบฒเปเบฎเบทเบญ, เปเบกเบทเบญเบ เบเบฑเบเบเบฐเบเบนเบฅเบต, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบเบณเบเบญเบ เบฅเบฒเบงเบเบฒเบก', phone: '020-99996666', address: 'เบเปเบฒเบ เบเบญเบเบเบญเบ, เปเบกเบทเบญเบ เบชเบตเบชเบฑเบเบเบฐเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบงเบดเปเบฅ เบเบปเบกเบกเบฐเบงเบปเบ', phone: '020-44445555', address: 'เบเปเบฒเบ เบเบฒเปเบเบปเบฒ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบชเบตเบฅเบฒเบงเบฑเบ เบกเบฐเบเบตเบงเบปเบ', phone: '020-33334444', address: 'เบเปเบฒเบ เบซเบฒเบเบเบฒเบ, เปเบกเบทเบญเบ เบซเบฒเบเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบเบธเบเบเบฑเบ เบชเบธเบเบชเบปเบกเบเบนเบ', phone: '020-22223333', address: 'เบเปเบฒเบ เบเบฝเบเบเบดเบ, เปเบกเบทเบญเบ เบเบฑเบเบเบฐเบเบนเบฅเบต, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบเบฒเบงเบเบงเบ เปเบเปเบงเบกเบฐเบเบต', phone: '020-88889999', address: 'เบเปเบฒเบ เบงเบฑเบเบเบฐเปเปเบฒ, เปเบกเบทเบญเบ เบชเบตเบชเบฑเบเบเบฐเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบชเบดเบเปเบ เบเบณเบเบนเบก', phone: '020-66667777', address: 'เบเปเบฒเบ เปเบเบเบกเบตเปเบซเบเป, เปเบกเบทเบญเบ เบเบฒเบเบเบทเปเบก, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบญเบฒเบเบธเบชเบญเบ เบงเบฑเบเบเบต', phone: '020-11112222', address: 'เบเปเบฒเบ เบเบปเบเบกเบฐเปเบ, เปเบกเบทเบญเบ เบชเบฝเบเบญเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบกเบฐเปเบ เบฅเบฒเบเบฒเบงเบปเบ', phone: '020-55556666', address: 'เบเปเบฒเบ เบซเปเบงเบเบชเบฒเบ, เปเบกเบทเบญเบ เบซเบตเบเปเบซเบตเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบเบฑเบเบเบดเบ เปเบชเบเบญเบฒเบฅเบธเบ', phone: '020-99998888', address: 'เบเปเบฒเบ เปเบเปเบงเบเบนเบ, เปเบกเบทเบญเบ เบเบฑเบเบเบฐเบเบนเบฅเบต, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เบเบธเบเปเบฎเบทเบญเบ เบกเบฐเบฅเบดเบงเบฑเบ', phone: '020-44447777', address: 'เบเปเบฒเบ เบซเบฒเบเบเบฒเบ, เปเบกเบทเบญเบ เบซเบฒเบเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบฅเบฑเบเบเบฒ เบเบฑเบเบเบฒเบงเบปเบ', phone: '020-33335555', address: 'เบเปเบฒเบ เบเปเบฒเปเบ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฒเบง เปเบเบ เบงเบปเบเบชเบฐเบซเบงเบฑเบ', phone: '020-77779999', address: 'เบเปเบฒเบ เบเบฒเบเปเบ, เปเบกเบทเบญเบ เบเบฒเบเบเบทเปเบก, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเบฒเบ เบกเบธเบเบเบฒ เบชเบตเบเบญเบ', phone: '020-66668888', address: 'เบเปเบฒเบ เบเบปเบเบเบฒเบเบญเบ, เปเบกเบทเบญเบ เบชเบฝเบเบญเบ, เบงเบฝเบเบเบฑเบ' }
    ];

    for (const customer of customers) {
      await prisma.tb_Customer.create({
        data: {
          Cust_name: customer.name,
          Phone: customer.phone,
          Address: customer.address
        }
      });
    }

    // 3. เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธเธนเนเธชเนเธเธชเธดเธเธเนเธฒ (15 เธฃเธฒเธขเธเธฒเธฃ)
    console.log('๐ เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธเธนเนเธชเนเธเธชเธดเธเธเนเธฒ...');
    const suppliers = [
      { name: 'เบเปเบฅเบดเบชเบฑเบ เบเบญเบเบเบณ เบฅเบฒเบง เบเบณเบเบฑเบ', phone: '021-123456', address: 'เบเปเบฒเบ เปเบเบเบเปเบฒเบ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบฎเปเบฒเบ เบชเบตเบเบญเบ เบกเบฐเบเบตเปเบเปเบง', phone: '021-234567', address: 'เบเปเบฒเบ เบเบญเบเบกเบตเปเบซเบเป, เปเบกเบทเบญเบ เบเบฑเบเบเบฐเบเบนเบฅเบต, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบงเบดเบชเบฒเบซเบฐเบเบดเบ เปเบเปเบงเบเบญเบ', phone: '021-345678', address: 'เบเปเบฒเบ เบเบฒเปเบเบปเบฒ, เปเบกเบทเบญเบ เบชเบตเบชเบฑเบเบเบฐเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฅเบดเบชเบฑเบ เบกเบฐเบเบตเบเบณ เบเบณเบเบฑเบ', phone: '021-456789', address: 'เบเปเบฒเบ เบเปเบฒเปเบฎเบทเบญ, เปเบกเบทเบญเบ เบซเบฒเบเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบฎเปเบฒเบ เบเบฒเบงเบเบญเบ เบเบดเบเบเบดเบเบธเบ', phone: '021-567890', address: 'เบเปเบฒเบ เบซเปเบงเบเบชเบฒเบ, เปเบกเบทเบญเบ เบเบฒเบเบเบทเปเบก, เบงเบฝเบเบเบฑเบ' },
      { name: 'เปเบฎเบเบเบฒเบ เบฅเบฒเบงเบฐเบเบญเบ', phone: '021-678901', address: 'เบเปเบฒเบ เปเบเบเบกเบตเบซเบเปเบญเบ, เปเบกเบทเบญเบ เบชเบฝเบเบญเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบงเบดเบชเบฒเบซเบฐเบเบดเบ เบเบณเบฅเบฒเบง', phone: '021-789012', address: 'เบเปเบฒเบ เบงเบฑเบเบเบฐเปเปเบฒ, เปเบกเบทเบญเบ เบซเบตเบเปเบซเบตเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฅเบดเบชเบฑเบ เบเบญเบเปเบเบ เบเบณเบเบฑเบ', phone: '021-890123', address: 'เบเปเบฒเบ เบเบปเบเบกเบฐเปเบ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบฎเปเบฒเบ เบกเบฐเบเบตเบเบณ เบฅเบฒเบง', phone: '021-901234', address: 'เบเปเบฒเบ เปเบเปเบงเบเบนเบ, เปเบกเบทเบญเบ เบเบฑเบเบเบฐเบเบนเบฅเบต, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบงเบดเบชเบฒเบซเบฐเบเบดเบ เบชเบตเบเบญเบเบฅเบฒเบง', phone: '021-012345', address: 'เบเปเบฒเบ เบเบฒเบเปเบ, เปเบกเบทเบญเบ เบชเบตเบชเบฑเบเบเบฐเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เปเบฎเบเบเบฒเบ เปเบเปเบงเบกเบฐเบเบต', phone: '021-112233', address: 'เบเปเบฒเบ เบซเบฒเบเบเบฒเบ, เปเบกเบทเบญเบ เบซเบฒเบเบเบฒเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฅเบดเบชเบฑเบ เบเบญเบเบเบณเบเบฒเบง เบเบณเบเบฑเบ', phone: '021-223344', address: 'เบเปเบฒเบ เบเปเบฒเปเบ, เปเบกเบทเบญเบ เบเบฒเบเบเบทเปเบก, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบฎเปเบฒเบ เบฅเบฒเบงเปเบเบตเบ เบเบญเบเบเบณ', phone: '021-334455', address: 'เบเปเบฒเบ เบเบปเบเบเบฒเบเบญเบ, เปเบกเบทเบญเบ เบชเบฝเบเบญเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบงเบดเบชเบฒเบซเบฐเบเบดเบ เบกเบฐเบเบตเบเบญเบ', phone: '021-445566', address: 'เบเปเบฒเบ เปเบญเบเบเบงเบ, เปเบกเบทเบญเบ เบซเบตเบเปเบซเบตเบ, เบงเบฝเบเบเบฑเบ' },
      { name: 'เบเปเบฅเบดเบชเบฑเบ เบเบณเบเบฐเบเบตเบ เบเบณเบเบฑเบ', phone: '021-556677', address: 'เบเปเบฒเบ เบซเบฒเบเบเบฒเบ, เปเบกเบทเบญเบ เบชเบตเปเบเบ, เบงเบฝเบเบเบฑเบ' }
    ];

    for (const supplier of suppliers) {
      await prisma.tb_Supplier.create({
        data: {
          Sup_name: supplier.name,
          Phone: supplier.phone,
          Address: supplier.address
        }
      });
    }

    // 4. เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธชเธดเธเธเนเธฒ (20 เธเธดเนเธ)
    console.log('๐ เธชเธฃเนเธฒเธเธเนเธญเธกเธนเธฅเธชเธดเธเธเนเธฒ...');
    const products = [
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเบกเบฑเบเบเบญเบ', weight: 5.50, pattern: 580000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเปเบญเบเบเป', type: 'เบฅเบฒเบเบเบญเบเปเบกเป', weight: 12.30, pattern: 1250000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบเบธเปเบกเบซเบน', type: 'เบฅเบฒเบเบงเบปเบเบเบปเบก', weight: 3.20, pattern: 320000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเปเบเบฑเบ', weight: 4.80, pattern: 485000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเบฒเบเปเบเบ', type: 'เบฅเบฒเบเบเบน', weight: 8.75, pattern: 880000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบฎเบนเบเบเบปเบ', type: 'เบเบดเป', weight: 2.10, pattern: 210000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเบเบฒเบง', weight: 6.20, pattern: 625000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเปเบญเบเบเป', type: 'เบฅเบฒเบเปเบเป', weight: 15.40, pattern: 1550000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบเบธเปเบกเบซเบน', type: 'เบฅเบฒเบเปเบเปเบกเบธเบ', weight: 2.80, pattern: 285000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเบเบปเบง', weight: 5.10, pattern: 515000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเบฒเบเปเบเบ', type: 'เบฅเบฒเบเบเบญเบเบเบธเบซเบฅเบฒเบ', weight: 9.60, pattern: 965000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบฎเบนเบเบซเบปเบงเปเบ', type: 'เบเบดเป', weight: 1.90, pattern: 195000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเปเบฒเบเปเบกเป', weight: 4.50, pattern: 455000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเปเบญเบเบเป', type: 'เบฅเบฒเบเบขเบนเปเบเบต', weight: 11.20, pattern: 1125000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบเบธเปเบกเบซเบน', type: 'เบฅเบฒเบเปเบเป', weight: 3.60, pattern: 365000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเบญเบดเบเปเบ', weight: 7.30, pattern: 735000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเบฒเบเปเบเบ', type: 'เบฅเบฒเบเปเบเปเบง', weight: 10.80, pattern: 1085000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบฎเบนเบเบเบงเบเบเบฑเบ', type: 'เบเบดเป', weight: 2.40, pattern: 245000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เปเบซเบงเบ', type: 'เบฅเบฒเบเบเบฐเบฅเบฒเบชเบต', weight: 5.90, pattern: 595000, status: 'AVAILABLE', condition: 'GOOD' },
      { name: 'เบชเปเบญเบเบเป', type: 'เบฅเบฒเบเบกเบฐเบเบญเบ', weight: 13.70, pattern: 1375000, status: 'AVAILABLE', condition: 'GOOD' }
    ];

    for (const product of products) {
      await prisma.tb_Product.create({
        data: {
          Price_ID: goldPrice.Price_ID,
          Pd_name: product.name,
          Type: product.type,
          Weight: product.weight,
          Pattern_value: product.pattern,
          status: product.status,
          condition: product.condition
        }
      });
    }

    console.log('โ เนเธชเนเธเนเธญเธกเธนเธฅเธเธฑเธงเธญเธขเนเธฒเธเนเธชเธฃเนเธเธชเธดเนเธ!');
    console.log(`๐ เธชเธฃเธธเธเธเนเธญเธกเธนเธฅเธเธตเนเธชเธฃเนเธฒเธ:`);
    console.log(`   ๐ฐ เธฃเธฒเธเธฒเธเธญเธ: 1 เธฃเธฒเธขเธเธฒเธฃ`);
    console.log(`   ๐ฅ เธฅเธนเธเธเนเธฒ: ${customers.length} เธฃเธฒเธขเธเธฒเธฃ`);
    console.log(`   ๐ เธเธนเนเธชเนเธเธชเธดเธเธเนเธฒ: ${suppliers.length} เธฃเธฒเธขเธเธฒเธฃ`);
    console.log(`   ๐ เธชเธดเธเธเนเธฒ: ${products.length} เธฃเธฒเธขเธเธฒเธฃ`);
    
  } catch (error) {
    console.error('โ เนเธเธดเธเธเนเธญเธเธดเธเธเธฅเธฒเธ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  }); 